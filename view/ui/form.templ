package ui

import "fmt"

type FormProps struct {
	Action string
	Method string
}

templ Form(p *FormProps) {
	<form action={ templ.URL(p.Action) } method={ p.Method } class="max-w-sm">
		{ children... }
	</form>
}

templ GridForm(p *FormProps) {
	<form action={ templ.URL(p.Action) } method={ p.Method }>
		<div class="mt-8 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
			{ children... }
		</div>
	</form>
}

templ ColSpan(size int) {
	<div class={ fmt.Sprintf("sm:col-span-%d", size) }>
		{ children... }
	</div>
}

templ FormHeader(title string, description string) {
	if (len(description) > 0) {
		<h2 class="text-base font-semibold text-slate-900">{ title }</h2>
		<p class="mt-1 text-sm leading-6 text-slate-600 mb-5">{ description }</p>
	} else {
		<h2 class="text-base font-semibold text-slate-900 mb-5">{ title }</h2>
	}
}

templ Hidden(name string, value string) {
	<input type="hidden" name={ name } value={ value }/>
}

type InputProps struct {
	Label       string
	Name        string
	Type        string
	Placeholder string
	Required    bool
	Value       string
	Checked     bool
}

templ Input(p *InputProps) {
	if p.Type == "checkbox" {
		<div class="flex items-start mb-5">
			<div class="flex items-center h-5">
				<input id={ p.Name } type="checkbox" name={ p.Name } checked?={ p.Checked } required?={ p.Required } class="w-4 h-4 border border-gray-300 rounded-sm bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800"/>
			</div>
			if len(p.Label) > 0 {
				<label for={ p.Name } class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">{ p.Label }</label>
			}
		</div>
	} else {
		<div class="mb-5">
			if len(p.Label) > 0 {
				<label for={ p.Name } class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">{ p.Label }</label>
			}
			<input type={ p.Type } id={ p.Name } name={ p.Name } value={ p.Value } placeholder={ p.Placeholder } required?={ p.Required } class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"/>
		</div>
	}
}

templ InputText(label string, name string, value string) {
	<label for={ name } class="block text-sm font-medium leading-6 text-slate-900">{ label }</label>
	<div class="mt-2">
		<input type="text" value={ value } name={ name } id={ name } class="block w-full rounded-md border-0 py-1.5 text-slate-900 shadow-sm ring-1 ring-inset ring-slate-300 placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"/>
	</div>
}

templ Checkbox(label string, name string, value bool) {
	<div class="sm:mt-9 h-6 items-center">
		<input checked?={ value } id={ name } name={ name } type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600"/>
		<label for={ name } class="text-sm font-medium text-gray-900 ml-1">{ label }</label>
	</div>
}

type SelectItem struct {
	Name  string
	Value string
}

type SelectProps struct {
	Label         string
	Name          string
	Placeholder   string
	Items         []SelectItem
	SelectedValue string
}

templ Select(p *SelectProps) {
	<div class="mb-5">
		if len(p.Label) > 0 {
			<label for={ p.Name } class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">{ p.Label }</label>
		}
		<div class="mt-2">
			<select id={ p.Name } name={ p.Name } class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
				if len(p.Placeholder) > 0 {
					<option hidden selected?={ len(p.SelectedValue) == 0 }>{ p.Placeholder }</option>
				}
				for _, item := range p.Items {
					<option value={ item.Value } selected?={ item.Value == p.SelectedValue }>{ item.Name }</option>
				}
			</select>
		</div>
	</div>
}

templ Submit(title string) {
	<button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">{ title }</button>
}
