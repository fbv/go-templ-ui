package ui

type TableDataSource interface{
	GetColumnCount() int
	GetColumnName(col int) string
	GetColumnStyle(col int) string
	GetRowCount() int
	GetData(row, col int) templ.Component
}

templ DynamicTable(data TableDataSource) {
	<table class="border-collapse table-auto w-full">
		<thead class="border-t">
			<tr>
				for col := 0; col < data.GetColumnCount(); col++ {
					if col > 0 {
						<th class="border-b pl-2 pt-1 pr-2 pb-1 text-gray-400 text-left font-normal border-l">{ data.GetColumnName(col) }</th>
					} else {
						<th class="border-b pl-2 pt-1 pr-2 pb-1 text-gray-400 text-left font-normal">{ data.GetColumnName(col) }</th>
					}
				}
			</tr>	
		</thead>
        <tbody>
			for row := 0; row < data.GetRowCount(); row++ {
				<tr class="border-b hover:bg-slate-50 align-top">
					for col := 0; col < data.GetColumnCount(); col++ {
						<td class={ "px-2 py-1 "+ data.GetColumnStyle(col) }>@data.GetData(row, col)</td>
					}
				</tr>
			}
        </tbody>
	</table>
}

templ Text(text string) {
    <span>{ text }</span>
}

templ Table() {
	<table class="border-collapse table-auto w-full">
		{ children... }
	</table>
}

templ TableHeader(columns []string) {
	<thead class="border-t">
		<tr>
			for i, c := range columns {
				if i > 0 {
					<th class="border-b border-l pl-2 pt-1 pr-2 pb-1 text-gray-400 text-left font-normal">{ c }</th>
				} else {
					<th class="border-b pl-2 pt-1 pr-2 pb-1 text-gray-400 text-left font-normal">{ c }</th>
				}
			}
		</tr>
	</thead>
}

templ Values() {
	<table class="border-collapse table-auto">
		<tbody class="border-t">
			{ children... }
		</tbody>
	</table>
}

templ Value(header string) {
	<tr class="border-b hover:bg-slate-50">
		<th class="pl-2 pt-1 pr-2 pb-1 text-gray-400 text-right font-normal">{ header }</th>
		<td>{ children... }</td>
	</tr>
}
