package ui

templ List() {
	<div class="text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white">
		{ children... }
	</div>
}

type ListItemProps struct {
	Label    string
	URL      string
	OnDelete string
}

templ ListItem(p ListItemProps) {
	<a href={ templ.URL(p.URL) } class="block w-full px-4 py-2 border-b border-gray-200 cursor-pointer hover:bg-gray-100 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white">
		{ p.Label }
	</a>
}

type ListDataSource interface {
	GetItemCount() int
	GetItem(i int) *ListItemProps
}

templ SimpleList(ds ListDataSource) {
	<div class="text-sm font-medium text-gray-900 bg-white dark:bg-gray-700 dark:border-gray-600 dark:text-white">
		for row := 0; row < ds.GetItemCount(); row++ {
			@SimpleListItem(ds.GetItem(row))
		}
	</div>
}

templ SimpleListItem(p *ListItemProps) {
	<div class="relative block w-full px-2 py-1 border-b border-gray-200 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:focus:ring-gray-500 dark:focus:text-white">
		<span
			class="cursor-pointer hover:text-blue-700 dark:hover:text-white"
			if p.URL != "" {
				onclick={ AssignLocation(p.URL) }
			}
		>{ p.Label }</span>
		if p.OnDelete != "" {
			<button
				class="absolute top-0 right-0 px-2 py-1 text-gray-600 hover:text-red-500"
				onclick={ AssignLocation(p.OnDelete) }
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
		}
	</div>
}
