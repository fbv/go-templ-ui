package ui

type ButtonGroupItem struct {
	URL     string
	Name    string
	Active  bool
	SVGIcon *SVGIconProps
	Title   string
	Attrs   map[string]string //Additional custom attributes (like TailWind special attributes and etc)
}

func buttonGroupItemStyle(i int, count int, active bool) string {
	style := "px-4 py-2 text-sm font-medium bg-white border-gray-200 hover:bg-gray-100 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-blue-500 dark:focus:text-white"
	if active {
		style = "text-blue-700 " + style
	} else {
		style += "text-gray-900 hover:text-blue-700 " + style
	}
	if i == 0 {
		style = "border rounded-s-lg " + style
	} else if i == count-1 {
		if count > 2 {
			style = "border rounded-e-lg " + style
		} else {
			style = "border-t border-b border-r rounded-e-lg " + style
		}
	} else {
		style = "border-t border-b " + style
	}
	return style
}

templ ButtonGroup(items []ButtonGroupItem) {
	<div class="inline-flex rounded-md shadow-xs">
		for index, item := range items {
			<a
				{ renderAttributes(item.Attrs)... }
				if item.Title !="" {
					title={ item.Title }
				}
				if item.URL !="" {
					href={ templ.URL(item.URL) }
				}
				class={ buttonGroupItemStyle(index, len(items), item.Active) }
			>
				if item.SVGIcon != nil {
					@SVGIcon(item.SVGIcon)
				}
				{ item.Name }
			</a>
		}
	</div>
}
